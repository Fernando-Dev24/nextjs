Una migracion en los ORM significa que algun cambio que realizamos podemos o tendremos mejor dicho una migracion que Prisma se encargara de crearla para que los cambios realizados se hagan correctamente en la base de datos

Para hacerlo con Prisma podemos usar npx prisma migrate [migration_name]

Estas migraciones tienen que hacerse siempre que se quieran eliminar, agregar campos, entre miles de cosas mas

npx prisma generate se encarga de preparar prisma para realizar las ejecuciones pertinentes con nuestro codigo

INSERTAR SEMILLA
La insercion de una semilla o el termino de una quiere decir no comenzar a desarollar sin tener ningun registro en la base de datos o esperar a tener una base de datos completa.

Lo que se busca es poder comenzar con el desarrollo teniendo ya algo que nosotros podamos usar para simular el contenido final. El objetivo del seed es purgar la base de datos y hacer una insercion masiva de elementos de prueba.

Cuando nos referimos a purgar quiere decir borrar todos los datos, si es que los hubiera, de la base de datos y dejarla como recien creada

Prima db pull obtiene el schema de una base de datos ya definida y la obtiene para que tengamos nuestros modelos ya listos en nuestro codigo, luego de hacer un db pull siempre deberiamos de hacer un prisma generate

Por ultimo si necesitamos hacer un cambio en el modelo y hacemos un migrate dev o el nombre que queramos va a borrar dicha tabla, esto con el objetivo de siempre estar en sintonia de la base de datos junto con los modelos. Hay que tener cuidado con eso

Si queremos hacer esta sintonia de datos podemos usar db push pero teniendo en cuenta que ese proceso no pasa por migraciones

ACTUALIZAR LOS RESULTADOS OBTENIDOS DESDE UN ENDPOINT EN NEXTJS
Una cosa que es importante saber es que al trabajar con resful handlers pues podemos obtener la data utilizando las ventajas de los server components. Sin embargo, tambien vale la pena recalcar sus contras y es que no podemos recargar el componente nuevamente cuando hay una actualizacion.

De este tema hay poca informacion de NextJS porque queda mucho a la discrecion del programador. Sin embargo, una de las alternativas o work around para lograr el objetivo es:

1. usando router.refresh de next/navigation -> Esta funcion especial de Next pudiera pensarse que me va a recargar la pagina, y puede ser si, pero en realidad lo que esta haciendo es que NextJS se encargue de recargar solo aquellos elementos del arbol del DOM que sufrieron cambios. En pocas palabras es un refresh de aquellos elementos que tienen que ser cambiados debido a un cambio en su estado, pero no es un refresh destructivo donde tenga que cargarse nuevamente la aplicacion para lograr visualizar los cambios